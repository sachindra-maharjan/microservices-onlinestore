server:
  port: 8002

spring:
  application:
    name: ORDER-SERVICE
  config:
    import: "configserver:http://config-server:9091"
  datasource:
    url: jdbc:postgresql://postgres:5432/order-service
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: password
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: broker:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.yeti.store.orderservice.model.Event

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
        - "*"
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans

#Resilience4j properties
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        sliding-window-type: COUNT_BASED
        sliding-window-size: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
  #Resilience4J Timeout Properties
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s
  #Resilience4J Retry Properties
  retry:
    instances:
      inventory:
        wait-duration: 5s
        max-attempts: 3

